set nocompatible        " must be first line
set background=dark     " Assume a dark background

let data_dir = '~/.vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
  silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  autocmd VimEnter * PlugInstall --sync | source ~/.vimrc
else
  source ~/.vim/autoload/plug.vim
endif
call plug#begin()

" Deps
Plug 'gmarik/vundle'
Plug 'MarcWeber/vim-addon-mw-utils'
Plug 'tomtom/tlib_vim'
Plug 'rcarriga/nvim-notify'

" Colors
" Plug '~/code/vim-detailed'
Plug 'dasupradyumna/midnight.nvim'

" Colors
" Plug 'calebhearth/vim-detailed'
" Plug '~/code/vim-detailed'
Plug 'dasupradyumna/midnight.nvim'


" General
" Plug 'Lokaltog/vim-powerline'
Plug 'vim-airline/vim-airline'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'preservim/nerdtree', { 'on': 'NERDTreeToggle' }
Plug 'tpope/vim-surround'
Plug 'tpope/vim-unimpaired'
Plug 'pbrisbin/vim-rename-file'
Plug 'vim-scripts/SyntaxComplete'
Plug 'AndrewRadev/splitjoin.vim'
Plug 'luochen1990/rainbow'
Plug 'rhysd/conflict-marker.vim'
Plug 'wsdjeg/vim-fetch' " Open filenames with colons to jump to line / column

" General Programming
Plug 'tpope/vim-dotenv'
Plug 'tpope/vim-fugitive'
Plug 'lewis6991/gitsigns.nvim'
Plug 'tpope/vim-rhubarb'
" Plug 'calebthompson/vim-whitewash'
Plug 'jayferd/ragel.vim'
Plug 'tpope/vim-projectionist'
Plug 'tpope/vim-commentary'
Plug 'folke/todo-comments.nvim'
Plug 'sindrets/diffview.nvim'
Plug 'lewis6991/gitsigns.nvim'
Plug 'lewis6991/satellite.nvim'

" Javascript
" Plug 'leshill/vim-json'
Plug 'tpope/vim-jdaddy'
" Plug 'pangloss/vim-javascript'
Plug 'b0o/SchemaStore.nvim'

" HTML
Plug 'ap/vim-css-color'
Plug 'othree/html5.vim'

" Ruby
Plug 'vim-ruby/vim-ruby', { 'for': 'ruby' }
let g:rubycomplete_buffer_loading = 1
let g:rubycomplete_rails = 1
let g:rubycomplete_use_bundler = 1
Plug 'tpope/vim-rails'
Plug 'tpope/vim-rake'
Plug 'christoomey/vim-rfactory', { 'for': 'ruby' }
" Plug 'joker1007/vim-ruby-heredoc-syntax', { 'for': 'ruby' }

Plug 'fatih/vim-go', { 'for': 'go', 'on': 'GoInstallBinaries', 'do': ':GoInstallBinaries' }
Plug 'toyamarinyon/vim-swift', { 'for': 'swift' }
Plug 'exu/pgsql.vim', { 'for': 'sql' }

" Misc
Plug 'tpope/vim-dispatch'
Plug 'tpope/vim-bundler'
Plug 'tpope/vim-heroku'
Plug 'tpope/vim-abolish'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-eunuch'
Plug 'tpope/vim-dadbod'
Plug 'tpope/vim-markdown'
Plug 'christoomey/vim-conflicted'
Plug 'christoomey/vim-tmux-navigator'

if has('nvim')
  " Plug 'github/copilot.vim'
  Plug 'neovim/nvim-lspconfig'
  Plug 'nvim-treesitter/nvim-treesitter', {'do': ':TSUpdate'}
  Plug 'nvim-treesitter/nvim-treesitter-context'
  Plug 'jmbuhr/otter.nvim'
endif

Plug 'echasnovski/mini.ai'
Plug 'echasnovski/mini.surround'

" Plug 'stefanoverna/vim-i18n', { 'for': 'ruby' }
Plug 'vim-test/vim-test'
Plug 'knubie/vim-kitty-navigator', {'do': 'cp ./*.py ~/.config/kitty/'}

Plug 'catppuccin/nvim', { 'as': 'catppuccin' }
Plug 'fladson/vim-kitty', { 'tag': '*' }

call plug#end()
